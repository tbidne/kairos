name: ci

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  cabal:
    strategy:
      fail-fast: false
      matrix:
        ghc:
          - vers: "9.2.8"
            proj-file: ""
          - vers: "9.4.8"
            proj-file: ""
          - vers: "9.6.6"
            proj-file: ""
          - vers: "9.8.2"
            proj-file: ""
          - vers: "9.10.1"
            proj-file: "--project-file cabal.ghc9101.project"
          - vers: "9.12.1"
            proj-file: ""
        os:
          - "macos-latest"
          - "ubuntu-latest"
          - "windows-latest"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc.vers }}

      - name: Configure
        run: cabal configure ${{ matrix.ghc.proj-file }} --enable-tests --ghc-options -Werror

      - name: Compile
        run: cabal build ${{ matrix.ghc.proj-file }} exe:kairos

      - name: Unit Tests
        run: cabal test ${{ matrix.ghc.proj-file }} unit --test-options "--hedgehog-tests 100000"

      - name: Functional Tests
        run: cabal test ${{ matrix.ghc.proj-file }} functional

  stack:
    strategy:
      fail-fast: false
      matrix:
        os:
          - "macos-latest"
          - "ubuntu-latest"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: haskell-actions/setup@v2
        with:
          enable-stack: true

      - name: Compile
        run: stack build --ghc-options -Werror

      - name: Test
        run: stack test --ghc-options -Werror

  nix:
    strategy:
      fail-fast: false
      matrix:
        os:
          - "macos-latest"
          - "ubuntu-latest"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup nix
        uses: cachix/install-nix-action@v30
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Compile & Test
        run: nix build
  lint:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4

      - name: Setup nix
        uses: cachix/install-nix-action@v30
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-unstable}}

      - name: Formatting
        run: |
          nix run .#format
          git diff --exit-code --color=always
